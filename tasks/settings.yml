---

- name: Enable RabbitMQ plugins
  rabbitmq_plugin:
    names: "{{ item }}"
    state: enabled
    prefix: /usr/lib/rabbitmq
    new_only: yes
  with_items: "{{ rabbitmq_cluster_plugins }}"
  notify: service restart

- name: Remove disabled RabbitMQ users
  rabbitmq_user:
    user: "{{ item }}"
    state: absent
  ignore_errors: yes  # rabbitmq_user is not idempotent
  delegate_to: "{{ play_hosts | first }}" # Settings should be applied on any single node in the cluster
  run_once: yes
  with_items: "{{ rabbitmq_cluster_disabled_users }}"

- name: Ensure RabbitMQ users
  rabbitmq_user:
    user: "{{ item.user }}"
    password: "{{ item.password }}"
    configure_priv: "{{ item.configure_priv | default('.*') }}"
    read_priv: "{{ item.read_priv | default('.*') }}"
    write_priv: "{{ item.write_priv | default('.*') }}"
    vhost: "{{ item.vhost | default('/') }}"
    permissions: "{{ item.permissions | default(omit) }}"
    tags: "{{ item.tags | default('') }}"
  no_log: true  # do not show passwords in logs
  delegate_to: "{{ play_hosts | first }}" # Settings should be applied on any single node in the cluster
  run_once: yes
  with_items: "{{ rabbitmq_cluster_users }}"

- name: Setup RabbitMQ policies
  rabbitmq_policy:
    name: "{{ item.name }}"
    node: "{{ item.node | default('rabbit') }}"
    apply_to: "{{ item.apply_to | default('all') }}"
    state: "{{ item.state | default('present') }}"
    vhost: "{{ item.vhost | default('/') }}"
    pattern: "{{ item.pattern }}"
    tags: "{{ item.tags }}"
  with_items: "{{ rabbitmq_cluster_policies }}"
  delegate_to: "{{ play_hosts | first }}" # Settings should be applied on any single node in the cluster
  run_once: yes
  when: rabbitmq_cluster_policies is defined
